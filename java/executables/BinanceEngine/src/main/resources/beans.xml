<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <import resource="classpath:binance_instruments.xml"></import>

    <bean
            class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <value>file:application.properties</value>
                <value>classpath:application.properties</value>
            </list>
        </property>
    </bean>


    <bean id="connectorConfiguration" class="com.lambda.investing.connector.zero_mq.ZeroMqConfiguration">
        <property name="port" value="${marketdata.port}"/>
        <property name="host" value="localhost"/>
    </bean>

    <bean id="connectorPublisher" class="com.lambda.investing.connector.zero_mq.ZeroMqPublisher">
        <constructor-arg index="0" value="binanceConnectorPublisher"/>
        <constructor-arg index="1" value="1"/>
    </bean>


    <bean id="binanceMarketDataConfiguration"
          class="com.lambda.investing.market_data_connector.binance.BinanceMarketDataConfiguration">
        <constructor-arg index="0" value="${binance.apikey}"/>
        <constructor-arg index="1" value="${binance.secretkey}"/>
    </bean>

    <bean id="binanceMarketDataPublisher"
          class="com.lambda.investing.market_data_connector.binance.BinanceMarketDataPublisher" init-method="start">
        <constructor-arg index="0" ref="connectorConfiguration"/>
        <constructor-arg index="1" ref="connectorPublisher"/>
        <constructor-arg index="2" ref="binanceMarketDataConfiguration"/>
        <constructor-arg index="3" ref="binance_instruments"/>
    </bean>


    <!--persistance listener-->
    <bean id="connectorProvider" class="com.lambda.investing.connector.zero_mq.ZeroMqProvider"
          factory-method="getInstance" init-method="start">
        <constructor-arg index="0" ref="connectorConfiguration"/>
        <constructor-arg index="1" value="1"/>
    </bean>

    <bean id="persistMarketDataConnectorPublisher"
          class="com.lambda.investing.market_data_connector.persist.PersistorMarketDataConnector" init-method="init">
        <constructor-arg index="0" value="${csv.datapath}"/>
        <constructor-arg index="1" value="${parquet.datapath}\java_parquet"/>
        <constructor-arg index="2" ref="connectorProvider"/>
        <constructor-arg index="3" ref="connectorConfiguration"/>
        <property name="persistParquet" value="false"/>
    </bean>

    <!--trading engine-->
    <bean id="executionReportConfigurationPublisher" class="com.lambda.investing.connector.zero_mq.ZeroMqConfiguration">
        <property name="port" value="${tradeengine.port}"/>
        <property name="host" value="localhost"/>
    </bean>

    <bean id="executionReportConnectorPublisher" class="com.lambda.investing.connector.zero_mq.ZeroMqPublisher">
        <constructor-arg index="0" value="binanceExecutionReportPublisher"/>
        <constructor-arg index="1" value="1"/>
    </bean>


    <bean id="binanceTradingEngineConfiguration"
          class="com.lambda.investing.trading_engine_connector.binance.BinanceTradingEngineConfiguration">
        <constructor-arg index="0" value="${binance.apikey}"/>
        <constructor-arg index="1" value="${binance.secretkey}"/>
    </bean>


    <bean id="binanceTradingEngine"
          class="com.lambda.investing.trading_engine_connector.binance.BinanceBrokerTradingEngine" init-method="start">

        <constructor-arg index="0" ref="connectorConfiguration"/>
        <constructor-arg index="1" ref="connectorProvider"/>
        <constructor-arg index="2" ref="executionReportConfigurationPublisher"/>
        <constructor-arg index="3" ref="executionReportConnectorPublisher"/>
        <constructor-arg index="4" ref="binanceTradingEngineConfiguration"/>
    </bean>


</beans>